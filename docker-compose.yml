version: '3.8'

name: blog

services:
    frontend:
        image: node:20
        restart: always
        working_dir: /app
        volumes:
            - .:/app
            - /app/.next
        command: yarn dev
        environment:
            NODE_ENV: development
            NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
            POSTGRES_PRISMA_URL: ${POSTGRES_PRISMA_URL}
            POSTGRES_URL_NON_POOLING: ${POSTGRES_URL_NON_POOLING}
            GITHUB_ID: ${GITHUB_ID}
            GITHUB_SECRET: ${GITHUB_SECRET}
            NEXTAUTH_URL: ${NEXTAUTH_URL}
        networks:
            - proxy
        labels:
            traefik.enable: true
            traefik.http.routers.blog-next.rule: Host(`blog.dev.localhost`)
            traefik.http.routers.blog-next.entrypoints: https
            traefik.http.services.blog-next.loadbalancer.server.port: 3000

    postgres:
        image: postgres:15-alpine
        restart: always
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - 5432:5432
        networks:
            - proxy
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - POSTGRES_DB=blog

    # prisma-studio:
    #     build:
    #         context: ./
    #         dockerfile: ./docker/studio/Dockerfile
    #     restart: always
    #     volumes:
    #         - ./prisma/schema.prisma:/schema.prisma:ro
    #     environment:
    #         POSTGRES_PRISMA_URL: ${POSTGRES_PRISMA_URL}
    #     networks:
    #         - proxy
    #     labels:
    #         traefik.enable: true
    #         traefik.http.routers.blog-studio.rule: Host(`blog.db.localhost`)
    #         traefik.http.routers.blog-studio.entrypoints: https
    #         traefik.http.services.blog-studio.loadbalancer.server.port: 5555

networks:
    proxy:
        external: true

volumes:
    postgres:
